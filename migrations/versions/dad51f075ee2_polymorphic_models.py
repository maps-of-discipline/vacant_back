"""polymorphic models

Revision ID: dad51f075ee2
Revises: c41c7429321b
Create Date: 2025-02-16 22:21:52.226411

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dad51f075ee2'
down_revision: Union[str, None] = 'c41c7429321b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('change_application_application_id_fkey', 'change_application', type_='foreignkey')
    op.create_foreign_key(None, 'change_application', 'application', ['id'], ['id'])
    op.drop_column('change_application', 'application_id')
    op.drop_constraint('reinstatement_application_application_id_fkey', 'reinstatement_application', type_='foreignkey')
    op.create_foreign_key(None, 'reinstatement_application', 'application', ['id'], ['id'])
    op.drop_column('reinstatement_application', 'application_id')
    op.drop_constraint('transfer_application_application_id_fkey', 'transfer_application', type_='foreignkey')
    op.create_foreign_key(None, 'transfer_application', 'application', ['id'], ['id'])
    op.drop_column('transfer_application', 'application_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transfer_application', sa.Column('application_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'transfer_application', type_='foreignkey')
    op.create_foreign_key('transfer_application_application_id_fkey', 'transfer_application', 'application', ['application_id'], ['id'])
    op.add_column('reinstatement_application', sa.Column('application_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'reinstatement_application', type_='foreignkey')
    op.create_foreign_key('reinstatement_application_application_id_fkey', 'reinstatement_application', 'application', ['application_id'], ['id'])
    op.add_column('change_application', sa.Column('application_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'change_application', type_='foreignkey')
    op.create_foreign_key('change_application_application_id_fkey', 'change_application', 'application', ['application_id'], ['id'])
    # ### end Alembic commands ###
