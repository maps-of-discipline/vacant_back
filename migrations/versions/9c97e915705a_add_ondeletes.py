"""add ondeletes

Revision ID: 9c97e915705a
Revises: 4b31aead6670
Create Date: 2025-03-22 20:47:26.503715

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9c97e915705a'
down_revision: Union[str, None] = '4b31aead6670'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('application_user_id_fkey', 'application', type_='foreignkey')
    op.create_foreign_key(None, 'application', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('documents_application_id_fkey', 'documents', type_='foreignkey')
    op.create_foreign_key(None, 'documents', 'application', ['application_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('role_has_permission_permission_id_fkey', 'role_has_permission', type_='foreignkey')
    op.drop_constraint('role_has_permission_role_id_fkey', 'role_has_permission', type_='foreignkey')
    op.create_foreign_key(None, 'role_has_permission', 'permission', ['permission_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'role_has_permission', 'role', ['role_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('token_user_id_fkey', 'token', type_='foreignkey')
    op.create_foreign_key(None, 'token', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('user_has_role_role_id_fkey', 'user_has_role', type_='foreignkey')
    op.drop_constraint('user_has_role_user_id_fkey', 'user_has_role', type_='foreignkey')
    op.create_foreign_key(None, 'user_has_role', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_has_role', 'role', ['role_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_has_role', type_='foreignkey')
    op.drop_constraint(None, 'user_has_role', type_='foreignkey')
    op.create_foreign_key('user_has_role_user_id_fkey', 'user_has_role', 'user', ['user_id'], ['id'])
    op.create_foreign_key('user_has_role_role_id_fkey', 'user_has_role', 'role', ['role_id'], ['id'])
    op.drop_constraint(None, 'token', type_='foreignkey')
    op.create_foreign_key('token_user_id_fkey', 'token', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'role_has_permission', type_='foreignkey')
    op.drop_constraint(None, 'role_has_permission', type_='foreignkey')
    op.create_foreign_key('role_has_permission_role_id_fkey', 'role_has_permission', 'role', ['role_id'], ['id'])
    op.create_foreign_key('role_has_permission_permission_id_fkey', 'role_has_permission', 'permission', ['permission_id'], ['id'])
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.create_foreign_key('documents_application_id_fkey', 'documents', 'application', ['application_id'], ['id'])
    op.drop_constraint(None, 'application', type_='foreignkey')
    op.create_foreign_key('application_user_id_fkey', 'application', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###
